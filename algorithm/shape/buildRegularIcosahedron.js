const { fromPointsAndPaths } = require('@jsxcad/algorithm-polygons');

// Unit icosahedron vertices.
const points = [[0.850651, 0.000000, -0.525731],
                [0.850651, -0.000000, 0.525731],
                [-0.850651, -0.000000, 0.525731],
                [-0.850651, 0.000000, -0.525731],
                [0.000000, -0.525731, 0.850651],
                [0.000000, 0.525731, 0.850651],
                [0.000000, 0.525731, -0.850651],
                [0.000000, -0.525731, -0.850651],
                [-0.525731, -0.850651, -0.000000],
                [0.525731, -0.850651, -0.000000],
                [0.525731, 0.850651, 0.000000],
                [-0.525731, 0.850651, 0.000000]];

// Triangular decomposition structure.
const paths = [[1, 9, 0], [0, 10, 1], [0, 7, 6], [0, 6, 10],
               [0, 9, 7], [4, 1, 5], [9, 1, 4], [1, 10, 5],
               [3, 8, 2], [2, 11, 3], [4, 5, 2], [2, 8, 4],
               [5, 11, 2], [6, 7, 3], [3, 11, 6], [3, 7, 8],
               [4, 8, 9], [5, 10, 11], [6, 11, 10], [7, 9, 8]];

const buildRegularIcosahedron = (options = {}) => {
  return fromPointsAndPaths({ points: points, paths: paths });
};

module.exports = buildRegularIcosahedron;
