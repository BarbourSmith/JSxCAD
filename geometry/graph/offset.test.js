import { fromSurface } from './fromSurface.js';
import { initCgal } from '@jsxcad/algorithm-cgal';
import { offset } from './offset.js';
import { outline } from './outline.js';
import test from 'ava';

test.beforeEach(async (t) => {
  await initCgal();
});

test('offset', (t) => {
  const square = [
    [
      [-0.5, 0.5, -0.5],
      [0.5, 0.5, -0.5],
      [0.5, -0.5, -0.5],
    ],
    [
      [0.5, -0.5, -0.5],
      [-0.5, -0.5, -0.5],
      [-0.5, 0.5, -0.5],
    ],
  ];
  const graph = fromSurface(square);
  const outlineGraph = outline(graph);
  t.deepEqual(JSON.parse(JSON.stringify(outlineGraph)), {
    isClosed: false,
    isLazy: true,
    isOutline: true,
    isWireframe: true,
  });
  const offsetGraph = offset(outlineGraph, -0.2);
  t.deepEqual(JSON.parse(JSON.stringify(offsetGraph)), {
    points: [
      [0.3, 0.5, -0.5],
      [0.5, 0.3, -0.5],
      [0.48039657193408786, 0.3009630546655606, -0.5],
      [0.46098193559677436, 0.3038429439193539, -0.5],
      [0.44194306454910753, 0.30861193285355826, -0.5],
      [0.423463313526982, 0.3152240934977426, -0.5],
      [0.40572065263480045, 0.323615747130329, -0.5],
      [0.38888595339607956, 0.33370607753949094, -0.5],
      [0.37312134316727086, 0.3453979093274526, -0.5],
      [0.3585786437626905, 0.35857864376269044, -0.5],
      [0.3453979093274526, 0.37312134316727086, -0.5],
      [0.33370607753949094, 0.38888595339607956, -0.5],
      [0.32361574713032903, 0.40572065263480045, -0.5],
      [0.3152240934977426, 0.423463313526982, -0.5],
      [0.3086119328535582, 0.44194306454910753, -0.5],
      [0.3038429439193539, 0.46098193559677436, -0.5],
      [0.3009630546655606, 0.4803965719340879, -0.5],
      [0.3, 0.3, -0.5],
      [0.5, -0.3, -0.5],
      [0.3, -0.5, -0.5],
      [0.3009630546655606, -0.48039657193408786, -0.5],
      [0.3038429439193539, -0.46098193559677436, -0.5],
      [0.30861193285355826, -0.44194306454910753, -0.5],
      [0.3152240934977426, -0.423463313526982, -0.5],
      [0.323615747130329, -0.40572065263480045, -0.5],
      [0.33370607753949094, -0.38888595339607956, -0.5],
      [0.3453979093274526, -0.37312134316727086, -0.5],
      [0.35857864376269044, -0.3585786437626905, -0.5],
      [0.37312134316727086, -0.3453979093274526, -0.5],
      [0.38888595339607956, -0.33370607753949094, -0.5],
      [0.40572065263480045, -0.32361574713032903, -0.5],
      [0.423463313526982, -0.3152240934977426, -0.5],
      [0.44194306454910753, -0.3086119328535582, -0.5],
      [0.46098193559677436, -0.3038429439193539, -0.5],
      [0.4803965719340879, -0.3009630546655606, -0.5],
      [0.3, -0.3, -0.5],
      [-0.3, -0.5, -0.5],
      [-0.5, -0.3, -0.5],
      [-0.48039657193408786, -0.3009630546655606, -0.5],
      [-0.46098193559677436, -0.3038429439193539, -0.5],
      [-0.44194306454910753, -0.30861193285355826, -0.5],
      [-0.423463313526982, -0.3152240934977426, -0.5],
      [-0.40572065263480045, -0.323615747130329, -0.5],
      [-0.38888595339607956, -0.33370607753949094, -0.5],
      [-0.37312134316727086, -0.3453979093274526, -0.5],
      [-0.3585786437626905, -0.35857864376269044, -0.5],
      [-0.3453979093274526, -0.37312134316727086, -0.5],
      [-0.33370607753949094, -0.38888595339607956, -0.5],
      [-0.32361574713032903, -0.40572065263480045, -0.5],
      [-0.3152240934977426, -0.423463313526982, -0.5],
      [-0.3086119328535582, -0.44194306454910753, -0.5],
      [-0.3038429439193539, -0.46098193559677436, -0.5],
      [-0.3009630546655606, -0.4803965719340879, -0.5],
      [-0.3, -0.3, -0.5],
      [-0.5, 0.3, -0.5],
      [-0.3, 0.5, -0.5],
      [-0.3009630546655606, 0.48039657193408786, -0.5],
      [-0.3038429439193539, 0.46098193559677436, -0.5],
      [-0.30861193285355826, 0.44194306454910753, -0.5],
      [-0.3152240934977426, 0.423463313526982, -0.5],
      [-0.323615747130329, 0.40572065263480045, -0.5],
      [-0.33370607753949094, 0.38888595339607956, -0.5],
      [-0.3453979093274526, 0.37312134316727086, -0.5],
      [-0.35857864376269044, 0.3585786437626905, -0.5],
      [-0.37312134316727086, 0.3453979093274526, -0.5],
      [-0.38888595339607956, 0.33370607753949094, -0.5],
      [-0.40572065263480045, 0.32361574713032903, -0.5],
      [-0.423463313526982, 0.3152240934977426, -0.5],
      [-0.44194306454910753, 0.3086119328535582, -0.5],
      [-0.46098193559677436, 0.3038429439193539, -0.5],
      [-0.4803965719340879, 0.3009630546655606, -0.5],
      [-0.3, 0.3, -0.5],
    ],
    edges: [
      { point: 0, loop: 0, twin: -1, next: 1 },
      { point: 1, loop: 0, twin: -1, next: 2 },
      { point: 2, loop: 0, twin: -1, next: 3 },
      { point: 3, loop: 0, twin: -1, next: 4 },
      { point: 4, loop: 0, twin: -1, next: 5 },
      { point: 5, loop: 0, twin: -1, next: 6 },
      { point: 6, loop: 0, twin: -1, next: 7 },
      { point: 7, loop: 0, twin: -1, next: 8 },
      { point: 8, loop: 0, twin: -1, next: 9 },
      { point: 9, loop: 0, twin: -1, next: 10 },
      { point: 10, loop: 0, twin: -1, next: 11 },
      { point: 11, loop: 0, twin: -1, next: 12 },
      { point: 12, loop: 0, twin: -1, next: 13 },
      { point: 13, loop: 0, twin: -1, next: 14 },
      { point: 14, loop: 0, twin: -1, next: 15 },
      { point: 15, loop: 0, twin: -1, next: 16 },
      { point: 16, loop: 0, twin: -1, next: 17 },
      { point: 0, loop: 0, twin: -1, next: 18 },
      { point: 17, loop: 0, twin: -1, next: 19 },
      { point: 17, loop: 0, twin: -1, next: 20 },
      { point: 18, loop: 0, twin: -1, next: 21 },
      { point: 19, loop: 0, twin: -1, next: 22 },
      { point: 20, loop: 0, twin: -1, next: 23 },
      { point: 21, loop: 0, twin: -1, next: 24 },
      { point: 22, loop: 0, twin: -1, next: 25 },
      { point: 23, loop: 0, twin: -1, next: 26 },
      { point: 24, loop: 0, twin: -1, next: 27 },
      { point: 25, loop: 0, twin: -1, next: 28 },
      { point: 26, loop: 0, twin: -1, next: 29 },
      { point: 27, loop: 0, twin: -1, next: 30 },
      { point: 28, loop: 0, twin: -1, next: 31 },
      { point: 29, loop: 0, twin: -1, next: 32 },
      { point: 30, loop: 0, twin: -1, next: 33 },
      { point: 31, loop: 0, twin: -1, next: 34 },
      { point: 32, loop: 0, twin: -1, next: 35 },
      { point: 33, loop: 0, twin: -1, next: 36 },
      { point: 34, loop: 0, twin: -1, next: 37 },
      { point: 18, loop: 0, twin: -1, next: 38 },
      { point: 35, loop: 0, twin: -1, next: 39 },
      { point: 35, loop: 0, twin: -1, next: 40 },
      { point: 36, loop: 0, twin: -1, next: 41 },
      { point: 37, loop: 0, twin: -1, next: 42 },
      { point: 38, loop: 0, twin: -1, next: 43 },
      { point: 39, loop: 0, twin: -1, next: 44 },
      { point: 40, loop: 0, twin: -1, next: 45 },
      { point: 41, loop: 0, twin: -1, next: 46 },
      { point: 42, loop: 0, twin: -1, next: 47 },
      { point: 43, loop: 0, twin: -1, next: 48 },
      { point: 44, loop: 0, twin: -1, next: 49 },
      { point: 45, loop: 0, twin: -1, next: 50 },
      { point: 46, loop: 0, twin: -1, next: 51 },
      { point: 47, loop: 0, twin: -1, next: 52 },
      { point: 48, loop: 0, twin: -1, next: 53 },
      { point: 49, loop: 0, twin: -1, next: 54 },
      { point: 50, loop: 0, twin: -1, next: 55 },
      { point: 51, loop: 0, twin: -1, next: 56 },
      { point: 52, loop: 0, twin: -1, next: 57 },
      { point: 36, loop: 0, twin: -1, next: 58 },
      { point: 53, loop: 0, twin: -1, next: 59 },
      { point: 53, loop: 0, twin: -1, next: 60 },
      { point: 54, loop: 0, twin: -1, next: 61 },
      { point: 55, loop: 0, twin: -1, next: 62 },
      { point: 56, loop: 0, twin: -1, next: 63 },
      { point: 57, loop: 0, twin: -1, next: 64 },
      { point: 58, loop: 0, twin: -1, next: 65 },
      { point: 59, loop: 0, twin: -1, next: 66 },
      { point: 60, loop: 0, twin: -1, next: 67 },
      { point: 61, loop: 0, twin: -1, next: 68 },
      { point: 62, loop: 0, twin: -1, next: 69 },
      { point: 63, loop: 0, twin: -1, next: 70 },
      { point: 64, loop: 0, twin: -1, next: 71 },
      { point: 65, loop: 0, twin: -1, next: 72 },
      { point: 66, loop: 0, twin: -1, next: 73 },
      { point: 67, loop: 0, twin: -1, next: 74 },
      { point: 68, loop: 0, twin: -1, next: 75 },
      { point: 69, loop: 0, twin: -1, next: 76 },
      { point: 70, loop: 0, twin: -1, next: 77 },
      { point: 54, loop: 0, twin: -1, next: 78 },
      { point: 71, loop: 0, twin: -1, next: 79 },
      { point: 71, loop: 0, twin: -1, next: 0 },
    ],
    loops: [{ edge: 0, face: 0 }],
    faces: [{ plane: [0, 0, -1, 0.5], loop: 0 }],
    isClosed: false,
    isOutline: true,
  });
});
