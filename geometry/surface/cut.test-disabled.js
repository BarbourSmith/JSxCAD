import { buildRegularPolygon } from '@jsxcad/algorithm-shape';
import { canonicalize } from './ops';
import { cut } from './cut';
import { fromPoints } from '@jsxcad/math-plane';
import test from 'ava';

test('Cut a circle.', t => {
  const [a, b] = cut(fromPoints([0, 0, 0], [1, 0, 0], [1, 0, 1]), [buildRegularPolygon()]);
  t.deepEqual(canonicalize(a),
              [[[1, 0, 0], [-1, 0, 0], [-0.98079, -0.19509, 0], [-0.92388, -0.38268, 0], [-0.83147, -0.55557, 0], [-0.70711, -0.70711, 0], [-0.55557, -0.83147, 0], [-0.38268, -0.92388, 0], [-0.19509, -0.98079, 0], [-0, -1, 0], [0.19509, -0.98079, 0], [0.38268, -0.92388, 0], [0.55557, -0.83147, 0], [0.70711, -0.70711, 0], [0.83147, -0.55557, 0], [0.92388, -0.38268, 0], [0.98079, -0.19509, 0]]]);
  t.deepEqual(canonicalize(b),
              [[[1, 0, 0], [0.98079, 0.19509, 0], [0.92388, 0.38268, 0], [0.83147, 0.55557, 0], [0.70711, 0.70711, 0], [0.55557, 0.83147, 0], [0.38268, 0.92388, 0], [0.19509, 0.98079, 0], [0, 1, 0], [-0.19509, 0.98079, 0], [-0.38268, 0.92388, 0], [-0.55557, 0.83147, 0], [-0.70711, 0.70711, 0], [-0.83147, 0.55557, 0], [-0.92388, 0.38268, 0], [-0.98079, 0.19509, 0], [-1, 0, 0]]]);
});
