// import { createNormalize3 } from '@jsxcad/algorithm-quantize';
// import { fromSolidToCleanSolid } from './cleanSolid.js';
import test from 'ava';

test('null', (t) => t.true(true));

/*
test('Cube().add(Cube().move(0.1))', (t) => {
  const normalize = createNormalize3();
  const solid = [
    [
      [
        [0.6000000000000001, 0.5, 0.5],
        [0.5000000000000001, 0.5, 0.4],
        [0.5000000000000001, 0.5, 0.5],
      ],
      [
        [0.5000000000000001, 0.5, 0.4],
        [0.6000000000000001, 0.5, 0.5],
        [0.6000000000000001, 0.5, -0.5],
        [0.5000000000000001, 0.5, -0.5],
      ],
      [
        [0.4999999999999999, -0.40000000000000036, 0.5],
        [0.5999999999999999, -0.5000000000000002, 0.5],
        [0.6000000000000001, 0.5, 0.5],
        [0.5000000000000001, 0.5, 0.5],
      ],
      [
        [0.5999999999999999, -0.5000000000000002, 0.5],
        [0.4999999999999999, -0.40000000000000036, 0.5],
        [0.4999999999999999, -0.5000000000000002, 0.5],
      ],
      [
        [0.5999999999999999, -0.5000000000000002, -0.5],
        [0.4999999999999999, -0.4000000000000002, -0.5],
        [0.5000000000000001, 0.5, -0.5],
        [0.6000000000000001, 0.5, -0.5],
      ],
      [
        [0.4999999999999999, -0.4000000000000002, -0.5],
        [0.5999999999999999, -0.5000000000000002, -0.5],
        [0.4999999999999999, -0.5000000000000002, -0.5],
      ],
      [
        [0.6000000000000001, 0.5, -0.5],
        [0.6000000000000001, 0.5, 0.5],
        [0.5999999999999999, -0.5000000000000002, 0.5],
      ],
      [
        [0.5999999999999999, -0.5000000000000002, 0.5],
        [0.5999999999999999, -0.5000000000000002, -0.5],
        [0.6000000000000001, 0.5, -0.5],
      ],
      [
        [0.5999999999999999, -0.5000000000000002, -0.5],
        [0.4999999999999999, -0.5000000000000002, -0.4],
        [0.4999999999999999, -0.5000000000000002, -0.5],
      ],
      [
        [0.4999999999999999, -0.5000000000000002, -0.4],
        [0.5999999999999999, -0.5000000000000002, -0.5],
        [0.5999999999999999, -0.5000000000000002, 0.5],
        [0.4999999999999999, -0.5000000000000002, 0.5],
      ],
      [
        [-0.49999999999999994, 0.5000000000000001, -0.5],
        [-0.3999999999999999, 0.5000000000000001, -0.5],
        [0.5000000000000001, 0.5, -0.5],
        [0.4999999999999999, -0.4000000000000002, -0.5],
        [0.4999999999999999, -0.5000000000000002, -0.5],
      ],
      [
        [0.4999999999999999, -0.5000000000000002, -0.5],
        [-0.40000000000000024, -0.49999999999999994, -0.5],
        [-0.5000000000000002, -0.49999999999999994, -0.5],
        [-0.49999999999999994, 0.5000000000000001, -0.5],
      ],
      [
        [-0.3999999999999999, 0.5000000000000001, -0.4],
        [-0.49999999999999994, 0.5000000000000001, -0.5],
        [-0.49999999999999994, 0.5000000000000001, 0.5],
        [-0.3999999999999999, 0.5000000000000001, 0.5],
      ],
      [
        [-0.49999999999999994, 0.5000000000000001, -0.5],
        [-0.3999999999999999, 0.5000000000000001, -0.4],
        [-0.3999999999999999, 0.5000000000000001, -0.5],
      ],
      [
        [-0.49999999999999994, 0.5000000000000001, 0.5],
        [-0.39999999999999997, 0.4000000000000001, 0.5],
        [-0.3999999999999999, 0.5000000000000001, 0.5],
      ],
      [
        [-0.39999999999999997, 0.4000000000000001, 0.5],
        [-0.49999999999999994, 0.5000000000000001, 0.5],
        [-0.5000000000000002, -0.49999999999999994, 0.5],
        [-0.40000000000000024, -0.49999999999999994, 0.5],
      ],
      [
        [-0.49999999999999994, 0.5000000000000001, 0.5],
        [-0.49999999999999994, 0.5000000000000001, -0.5],
        [-0.5000000000000002, -0.49999999999999994, -0.5],
      ],
      [
        [-0.5000000000000002, -0.49999999999999994, -0.5],
        [-0.5000000000000002, -0.49999999999999994, 0.5],
        [-0.49999999999999994, 0.5000000000000001, 0.5],
      ],
      [
        [-0.40000000000000024, -0.49999999999999994, 0.40000000000000013],
        [-0.5000000000000002, -0.49999999999999994, 0.5],
        [-0.5000000000000002, -0.49999999999999994, -0.5],
        [-0.40000000000000024, -0.49999999999999994, -0.5],
      ],
      [
        [-0.5000000000000002, -0.49999999999999994, 0.5],
        [-0.40000000000000024, -0.49999999999999994, 0.40000000000000013],
        [-0.40000000000000024, -0.49999999999999994, 0.5],
      ],
      [
        [-0.39999999999999997, 0.4000000000000001, 0.5],
        [0.4999999999999999, -0.5000000000000002, 0.5],
        [0.4999999999999999, -0.40000000000000036, 0.5],
        [0.5000000000000001, 0.5, 0.5],
        [-0.3999999999999999, 0.5000000000000001, 0.5],
      ],
      [
        [0.4999999999999999, -0.5000000000000002, 0.5],
        [-0.39999999999999997, 0.4000000000000001, 0.5],
        [-0.40000000000000024, -0.49999999999999994, 0.5],
      ],
      [
        [0.4999999999999999, -0.5000000000000002, -0.5],
        [-0.40000000000000024, -0.49999999999999994, 0.40000000000000013],
        [-0.40000000000000024, -0.49999999999999994, -0.5],
      ],
      [
        [-0.40000000000000024, -0.49999999999999994, 0.40000000000000013],
        [0.4999999999999999, -0.5000000000000002, -0.5],
        [0.4999999999999999, -0.5000000000000002, -0.4],
        [0.4999999999999999, -0.5000000000000002, 0.5],
        [-0.40000000000000024, -0.49999999999999994, 0.5],
      ],
      [
        [0.5000000000000001, 0.5, 0.5],
        [-0.3999999999999999, 0.5000000000000001, -0.4],
        [-0.3999999999999999, 0.5000000000000001, 0.5],
      ],
      [
        [-0.3999999999999999, 0.5000000000000001, -0.4],
        [0.5000000000000001, 0.5, 0.5],
        [0.5000000000000001, 0.5, 0.4],
        [0.5000000000000001, 0.5, -0.5],
        [-0.3999999999999999, 0.5000000000000001, -0.5],
      ],
    ],
  ];
  const cleanSolid = fromSolidToCleanSolid(solid, normalize);
  console.log(`QQ/cleanSolid: ${JSON.stringify(cleanSolid)}`);
  t.deepEqual(cleanSolid, []);
});
*/
